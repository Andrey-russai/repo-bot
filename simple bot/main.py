import logging
import asyncio
from random import random

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
import config
from keyboards import kb1, kb2
from random_fox import fox
from random import randint


API_TOKEN = config.token

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()


@dp.message(Command("cmd"))
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {name}", reply_markup=kb1)


@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.answer(f"Hello")


@dp.message(Command("fox"))
@dp.message(Command("–ª–∏—Å–∞"))
@dp.message(Command("–ª–∏—Å—É"))
@dp.message(F.text.lower() == "–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É")
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.answer(f"–î–µ—Ä–∂–∏ –õ–∏—Å—É, {name}!")
    await message.answer_photo(photo=img_fox)
    # await bot.send_photo(message.from_user.id, photo=img_fox)


@dp.message(Command("–≤—Ö–æ–¥"))
async def send_enter(message: types.Message):
    await message.answer(f"–≤—ã–ø–æ–ª–Ω–µ–Ω")

@dp.message(Command("–≤—ã—Ö–æ–¥"))
async def send_exit(message: types.Message):
    await message.answer(f"–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è")

@dp.message(F.text.lower() == 'num')
async def send_random(message: types.Message):
    number = randint(1, 10)
    await message.answer(f"{number}")


@dp.message(F.text)
async def echo(message: types.Message):
    if "—É—Ä–∞" in message.text.lower():
        await message.answer(F"Good!")
    elif message.text == "–∏–Ω—Ñ–æ":

        user_name = message.chat.id
        print(user_name)
        await message.answer(str(user_name))
    else:
        await message.answer(message.text)


@dp.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, {name}!")
    elif '–ø–æ–∫–∞' == msg_user:
        await message.answer(f"–ü–æ–∫–∞-–ø–æ–∫–∞, {name}!")
    elif '—Ç—ã –∫—Ç–æ?' in msg_user:
        await message.answer_dice(emoji="ü¶ä")
    elif '–≤—Ö–æ–¥' in msg_user:
        await message.answer(f"–≤—ã–ø–æ–ª–Ω–µ–Ω")
    elif '–≤—ã—Ö–æ–¥' in msg_user:
        await message.answer(f"–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è")
    elif '–ª–∏—Å—É' in msg_user:
        await message.answer(f"–°–º–æ—Ç—Ä–∏, —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å, {name}!", reply_markup=kb2)
    else:
        await message.answer(f"–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞ ( ")


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
